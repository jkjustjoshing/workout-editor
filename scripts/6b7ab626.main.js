"use strict";$("html").addClass(window.File&&window.FileReader&&window.FileList&&window.Blob?"filereader":"no-filereader"),window.WorkoutEditor={Collections:{},Views:{},Models:{},Routers:{},init:function(){console.log("Hello from Backbone!")}},$(document).ready(function(){WorkoutEditor.init();var a=new WorkoutEditor.Views.UploadView({el:$("div.uploader")}),b=new WorkoutEditor.Models.MapModel;a.on("fileChanged",function(a){var c=new WorkoutEditor.Models.FileModel({file:a});c.on("change:data",function(){b.set("fileModel",c),new WorkoutEditor.Views.MapView({el:$(".map"),model:b}),new WorkoutEditor.Views.DataView({el:$(".data"),model:c})})})}),Math.toRadians=function(a){return a*(Math.PI/180)},window.WorkoutEditor.Views.DataView=Backbone.View.extend({events:{"change #startTime":"updateTimes","change #stopTime":"updateTimes"},initialize:function(){window.d=this.model.get("data");var a=this.model.get("data").trackpoints,b={start:a.first().get("time"),stop:a.last().get("time"),duration:moment(a.last().get("time")).subtract(a.first().get("time"))},c=_.template($("#views\\/table").html(),{trackpoints:a,times:b,distance:Math.round(100*a.distance())/100});this.$el.html(c)},updateTimes:function(a){console.log(a.target.id,a.target.value)}}),window.WorkoutEditor.Views.UploadView=Backbone.View.extend({events:{'change input[type="file"]':"fileSelection"},fileSelection:function(a){this.trigger("fileChanged",a.target.files[0])}}),window.WorkoutEditor.Views.MapView=Backbone.View.extend({initialize:function(){var a={zoom:13,center:this.model.get("coordinates")[0],mapTypeId:google.maps.MapTypeId.ROADMAP},b=new google.maps.Map(this.$el[0],a),c=new google.maps.Polyline({path:this.model.get("coordinates"),geodesic:!0,strokeColor:"#FF0000",strokeOpacity:1,strokeWeight:2});c.setMap(b)}}),window.WorkoutEditor.Models.FileModel=Backbone.Model.extend({defaults:{file:null,fileContents:""},initialize:function(){var a,b=this.get("file").name.split(".");switch(b[b.length-1]){case"tcx":a=new WorkoutEditor.Models.TcxModel({file:this.get("file")});break;case"gpx":a=new WorkoutEditor.Models.GpxModel({file:this.get("file")});break;default:console.log("File not supported")}a.on("change:data",function(){this.set("data",a.get("data"))}.bind(this))}}),window.WorkoutEditor.Models.GpxModel=Backbone.Model.extend({defaults:{file:null,fileContents:""},initialize:function(){var a=this;this.on("change:file",function(){var b=new FileReader;b.onload=function(){this.set("fileContents",b.result),this.parse()}.bind(this),b.readAsText(a.get("file"))}),this.trigger("change:file")},parse:function(){var a={},b=$($.parseXML(this.get("fileContents"))).find("gpx"),c=b.children("trk").first();a.type=c.children("name").text().split(" ")[0],a.trackpoints=new window.WorkoutEditor.Collections.TrackpointCollection,c.children("trkseg").children("trkpt").each(function(){var b=$(this);a.trackpoints.push(new WorkoutEditor.Models.TrackpointModel({latitude:parseFloat(b.attr("lat")),longitude:parseFloat(b.attr("lon")),time:moment(b.children("time").text())}))}),this.set("data",a)}}),window.WorkoutEditor.Models.TcxModel=Backbone.Model.extend({defaults:{file:null,fileContents:""},initialize:function(){var a=this;this.on("change:file",function(){var b=new FileReader;b.onload=function(){this.set("fileContents",b.result),this.parse()}.bind(this),b.readAsText(a.get("file"))}),this.trigger("change:file")},parse:function(){var a={},b=$($.parseXML(this.get("fileContents"))).find("TrainingCenterDatabase"),c=b.children("Activities").first().children("Activity").first();a.type=c.attr("Sport"),a.laps=[],a.trackpoints=new window.WorkoutEditor.Collections.TrackpointCollection,c.children("Lap").each(function(b){var c=$(this);a.laps[b]={},a.laps[b].time=c.children("TotalTimeSeconds").text(),a.laps[b].distance=c.children("DistanceMeters").text(),a.laps[b].trackpointCount=0,c.children("Track").children("Trackpoint").each(function(){a.laps[b].trackpointCount++,a.trackpoints.push(new WorkoutEditor.Models.TrackpointModel({latitude:parseFloat($(this).children("Position").children("LatitudeDegrees").text()),longitude:parseFloat($(this).children("Position").children("LongitudeDegrees").text()),time:moment($(this).children("Time").text()),altitude:parseFloat($(this).children("AltitudeMeters").text()),distance:parseFloat($(this).children("DistanceMeters").text())}))})}),this.set("data",a)}}),window.WorkoutEditor.Models.MapModel=Backbone.Model.extend({initialize:function(){var a=this;this.on("change:fileModel",function(){var b=[];a.get("fileModel").get("data").trackpoints.forEach(function(a){b.push(new google.maps.LatLng(a.get("latitude"),a.get("longitude")))}),a.set("coordinates",b)})}}),window.WorkoutEditor.Models.TrackpointModel=Backbone.Model.extend({defaults:{latitude:0,longitude:0,time:new Date,altitude:0,distance:0},distance:function(a){var b=this.get("latitude"),c=this.get("longitude"),d=a.get("latitude"),e=a.get("longitude");if(!(b&&c&&d&&e))return 0;var f=3961,g=Math.toRadians(d-b),h=Math.toRadians(e-c),i=Math.toRadians(b),j=Math.toRadians(d),k=Math.sin(g/2)*Math.sin(g/2)+Math.sin(h/2)*Math.sin(h/2)*Math.cos(i)*Math.cos(j),l=2*Math.atan2(Math.sqrt(k),Math.sqrt(1-k));return f*l}}),window.WorkoutEditor.Collections.TrackpointCollection=Backbone.Collection.extend({model:window.WorkoutEditor.Models.TrackpointModel,distance:function(){for(var a=0,b=0;b<this.length-1;++b)a+=this.at(b).distance(this.at(b+1));return a},paces:function(){var a=[],b=this.at(0).get("time"),c=0;distance=0;for(var d=0;d<this.length-1;++d){var e=this.at(d).distance(this.at(d+1));distance+=e,distance>=c+1&&(c++,a.push({mile:c,startTime:b,endTime:this.at(d+1).get("time"),distance:1,elapsed:this.at(d+1).get("time").diff(b)/1e3}),b=this.at(d+1).get("time"))}return a}});